<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<!-- Time-stamp: <06/12/08 01:01:55 ptr> -->

<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
    <meta name="keywords" content="build, autotools, make, GNU, compilation, link">
    <link rel="stylesheet" type="text/css" href="main.css" media="screen" title="general">
    <link rel="stylesheet" type="text/css" href="decor.css" media="screen" title="general">
    <link rel="stylesheet" type="text/css" href="float.css" media="screen" title="general">
    <title>Complement: Make global customization</title>
  </head>

  <body>
<!--#include file="head-build.shtml" -->
<div class="toppic">
<img src="img/jpg/apropos.jpg">
</div>
<div class="main">
    <h2 class="lheader">Global customization: configure again?</h2>
     <p>Different projects assume different environment. Different
     environment require customization by hands or auto-configuration.</p>

     <p>Of cause 'auto' assume 'user not involved into configuration process'.
     Looks like good! But in reality this designate that make/configuration system propagate
     own point of view for project's environment, and often hide this assumptions
     from user.</p>

     <p>My desision is: I assume some 'default' configuration, but if this configuration not
     serve you needs, you may explicitly say you preferance. In this terms, utility that help
     you collect you specific requirements is useful.</p>

     <p>My makesystem provide 'configure' script too. But in contrast to autotools, this
     script only provide help in writing useful options, show available options and describe ones.
     Not more.</p>

     <p>If project require some component (say, <tt>boost::program_options</tt>), but apropriate
     libraries and/or headers not available, then you will see explicit error during compilation
     process, and this is only point where project depends upon <tt>boost::program_options</tt>.
     If this would checked by configration process, the project would has two points of dependency
     from <tt>boost::program_options</tt>: within configuration script and within project itself.</p>

<pre class="ddisplay">
./configure --help
Configuration utility.

Usage:

  configure [options]

Available options:

  --target=&lt;target&gt;     target platform (cross-compiling)
  --help                print this help message and exit
  --with-stlport=&lt;dir&gt;  use STLport in catalog &lt;dir&gt;
  --without-stlport     compile without STLport (default)
  --with-boost=&lt;dir&gt;    use boost headers in catalog &lt;dir&gt;
  --with-system-boost   use boost installed on this system
  --with-msvc=&lt;dir&gt;     use MS VC from this catalog
  --with-mssdk=&lt;dir&gt;    use MS SDK from this catalog
  --with-mwcw=&lt;dir&gt;     Metrowerks CodeWarrior compiler catalog (useful for mw* compilers)
                        i.e. something like "c:/Program Files/Metrowerks/CodeWarrior"
  --with-nwsdk=&lt;dir&gt;    use Novell NDK/SDK from this catalog (useful for *-*-netware target)
                        i.e. something like "c:/Novell/ndk/nwsdk"
  --with-extra-cxxflags=&lt;options&gt;
                        pass extra options to C++ compiler
  --use-static-gcc      use static gcc libs instead of shared libgcc_s (useful for gcc compiler,
                        that was builded with --enable-shared [default]; if compiler was builded
                        with --disable-shared, static libraries will be used in any case)
  --clean               remove custom settings (file Makefiles/config.mak)
                        and use default values
  --with-cxx=&lt;name&gt;     use &lt;name&gt; as C++ compiler
  --with-cc=&lt;name&gt;      use &lt;name&gt; as C compiler
  --use-compiler-family=&lt;name&gt; use compiler family; one of:
                        gcc      GNU compilers
                        icc      Intel compilers
                        mwccnlm  Metrowerks CodeWarrior for Novell Netware
                        aCC      HP\'s aCC compilers
                        CC       SunPro\'s CC compilers

                        default is 'gcc' family
  --without-debug       don\'t build debug variant
  --without-stldebug    don\'t build STLport\'s STLP_DEBUG mode
  --enable-static       build static
  --disable-shared      don\'t build shared
</pre>

  <center>
  <a href="MakeStart.shtml">&lt;&lt; Prev</a>&nbsp;<a href="MakeTags.shtml">Next &gt;&gt;</a>
  </center>

</div>
<!--#include file="foot.shtml" -->
<!-- Created: Mon Oct  7 16:33:17 MSD 2002 -->
  </body>
</html>

