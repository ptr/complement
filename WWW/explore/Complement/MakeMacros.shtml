<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<!-- Time-stamp: <06/12/12 09:45:03 ptr> -->

<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
    <link rel="stylesheet" type="text/css" href="main.css" media="screen" title="general">
    <link rel="stylesheet" type="text/css" href="decor.css" media="screen" title="general">
    <link rel="stylesheet" type="text/css" href="float.css" media="screen" title="general">
    <title>Complement: Make Macros</title>
  </head>

  <body>
<!--#include file="head-tech.shtml" -->
<div class="toppic">
<img src="img/jpg/apropos.jpg">
</div>
<div class="main">
    <h2 class="lheader">Macros for general use</h2>
    <dl>
      <dt>COMPILER_NAME
      <dd>kind of compiler; something like 'gcc', 'vc6', 'icc', 'aCC', ...; if not set assumed 'gcc'; note, that this isn't
          compiler call string, it used as identifier for compiler 'family'</dd>
      <dt>ALL_TAGS</dt>
      <dd>tags, that should be build during 'all' tag</dd>
      <dt>OUTPUT_DIR</dt>
      <dd>catalog for object files, resulting programs or libraries for release build</dd>
      <dt>OUTPUT_DIR_DBG</dt>
      <dd>catalog for object files, resulting programs or libraries for debug build</dd>
      <dt>OUTPUT_DIR_STLDBG</dt>
      <dd>catalog for object files, resulting programs or libraries for STLport debug mode build</dd>
      <dt>BASE_INSTALL_DIR</dt>
      <dd>base path for install; ${SRCROOT}/build/$(TARGET_NAME), if not redefined (TARGET_NAME is identification of target OS in case of cross-compilation)</dd>
      <dt>INCLUDES</dt>
      <dd>include options for compiler (like -I/path/to/someware); if STLport assumed, already have -I${STLPORT_INCLUDE_DIR}</dd>
      <dt>DEFS</dt>
      <dd>define options for preprocessor (like -DMY_MACRO=1); if STLport assumed already have -DSTLPORT_DEBUG for STLport debug mode</dd>
      <dt>OPT</dt>
      <dd>optimization flags; already have -g for debug or STLport debug, -O2 for release (or appropriate options for other compilers)</dd>
      <dt>LDFLAGS</dt>
      <dd>options for linker</dd>
      <dt>SRC_CC</dt>
      <dd>C++ sources (*.cc)</dd>
      <dt>SRC_CPP</dt>
      <dd>C++ sources (*.cpp)</dd>
      <dt>SRC_CXX</dt>
      <dd>C++ sources (*.cxx)</dd>
      <dt>SRC_C</dt>
      <dd>C sources (*.c)</dd>
    </dl>
    <h2 class="lheader">Macros to build application</h2>
    <dl>
      <dt>PRGNAME</dt>
      <dd>base name of application (i.e. without .exe on platforms where it used); presense of this macro is direction to build application</dd>
      <dt>PRGNAMES</dt>
      <dd>build few programs from same catalog</dd>
      <dt>BASE_INSTALL_BIN_DIR</dt>
      <dd>base path for application installation; BASE_INSTALL_DIR by default</dd>
      <dt>INSTALL_BIN_DIR</dt>
      <dd>path for release application installation; default BASE_INSTALL_BIN_DIR/bin</dd>
      <dt>INSTALL_BIN_DIR_DBG</dt>
      <dd>path for debug application installation; default $(INSTALL_BIN_DIR)_g</dd>
      <dt>INSTALL_BIN_DIR_STLDBG</dt>
      <dd>path for STLport debug mode application installation; default $(INSTALL_BIN_DIR)_stlg</dd>
    </dl>
    <h2 class="lheader">Macros to build library</h2>
    <dl>
      <dt>LIBNAME</dt>
      <dd>base name of library (i.e. without 'lib' prefix, '.lib', '.so', '.a', '.dll', etc. suffixes)</dd>
      <dt>LIBNAMES</dt>
      <dd>build few libraries from same catalog</dd>
      <dt>BASE_INSTALL_LIB_DIR</dt>
      <dd>base path for libararies installation; BASE_INSTALL_DIR by default</dd>
      <dt>INSTALL_LIB_DIR</dt>
      <dd>path for release libraries installation; default BASE_INSTALL_LIB_DIR/lib</dd>
      <dt>INSTALL_LIB_DIR_DBG</dt>
      <dd>path for debug libraries installation; default BASE_INSTALL_LIB_DIR/lib</dd>
      <dt>INSTALL_LIB_DIR_STLDBG</dt>
      <dd>path for STLport debug mode libraries installation; default BASE_INSTALL_LIB_DIR/lib</dd>
    </dl>
    <h2 class="lheader">Macros for specific tasks</h2>
    <dl>
      <dt>WITHOUT_STLPORT</dt>
      <dd>build without STLport, if defined</dd>
      <dt>NOT_USE_NOSTDLIB</dt>
      <dd>with STLport, I can avoid link with libstdc++ (only gcc-related); this is default, if it possible; to force link with libstdc++, define this as 1</dd>
      <dt>RULESBASE</dt>
      <dd>path where this make support system situated</dd>
      <dt>_FORCE_CXX</dt>
      <dd>use this name as C++ compiler, if defined; don't use it for cross!</dd>
      <dt>_FORCE_CC</dt>
      <dd>use this name as C compiler, if defined; don't use it for cross!</dd>
      <dt>OSNAME</dt>
      <dd>contain lower-case one-word OS name (linux, freebsd, hp-ux, sunos, windows, etc.); in case of cross-compilation this is for target OS</dd>
      <dt>POST_INSTALL</dt>
      <dd>command or group of command that will be made after release library or program installation; not defined</dd>
      <dt>POST_INSTALL_DBG</dt>
      <dd>command or group of command that will be made after debug library or program installation; not defined</dd>
      <dt>POST_INSTALL_STLDBG</dt>
      <dd>command or group of command that will be made after STLport debug mode library installation; not defined</dd>
      <dt>EXTRA_PRE</dt>
      <dd>tags that should be made before release-shared; not defined</dd>
      <dt>EXTRA_PRE_DBG</dt>
      <dd>tags that should be made before dbg-shared; not defined</dd>
      <dt>EXTRA_PRE_STLDBG</dt>
      <dd>tags that should be made before stldbg-shared; not defined</dd>
      <dt>EXTRA_POST</dt>
      <dd>tags that should be made after release-shared; not defined</dd>
      <dt>EXTRA_POST_DBG</dt>
      <dd>tags that should be made after dbg-shared; not defined</dd>
      <dt>EXTRA_POST_STLDBG</dt>
      <dd>tags that should be made after stldbg-shared; not defined</dd>
    </dl>
</div>
<!--#include file="foot.shtml" -->
<!-- Created: Fri Dec  8 14:11:17 MSD 2006 -->
  </body>
</html>

