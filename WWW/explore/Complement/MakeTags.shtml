<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<!-- Time-stamp: <06/12/08 01:38:20 ptr> -->

<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
    <link rel="stylesheet" type="text/css" href="main.css" media="screen" title="general">
    <link rel="stylesheet" type="text/css" href="decor.css" media="screen" title="general">
    <link rel="stylesheet" type="text/css" href="float.css" media="screen" title="general">
    <title>Complement: Make Tags</title>
  </head>

  <body>
<!--#include file="head-tech.shtml" -->
<div class="toppic">
<img src="img/jpg/apropos.jpg">
</div>
<div class="main">
    <h2 class="lheader">Build tags</h2>
    <dl>
    <dt>all</dt>
    <dd>Deafult tag; build release-shared, dbg-shared, stlport-debug (if applicable) tags</dd>
    <dt>install</dt>
    <dd>install-release-shared, install-dbg-shared, install-stldbg-shared (if applicable) variants</dd>
    <dt>release-shared</dt>
    <dd>Build optimized application with (link with dynamic libraries) or dynamic library; no debug information. Result will be in OUTPUT_DIR (./obj/gcc/so for gcc compilers family, if not overridden)</dd>
    <dt>dbg-shared</dt>
    <dd>Build application with (link with dynamic libraries) or dynamic library without optimization, but with debug information. Result will be in OUTPUT_DIR_DBG (./obj/gcc/so_g for gcc compilers family, if not overridden)</dd>
    <dt>stldbg-shared</dt>
    <dd>Build application with (link with dynamic libraries) or dynamic library without optimization, but with debug information and with special STL debug mode turned on (<a href="http://stlport.sourceforge.net">STLport</a>). Result will be in OUTPUT_DIR_STLDBG (./obj/gcc/so_stlg for gcc compilers family, if not overridden)</dd>
    <dt>release-static</dt>
    <dd>Build optimized application with (link mostly with static libraries) or static library; no debug information. Result will be in OUTPUT_DIR_A (./obj/gcc/so for gcc compilers family, if not overridden)</dd>
    <dt>dbg-static</dt>
    <dd>Build application with (link mostly with static libraries) or static library without optimization, but with debug information. Result will be in OUTPUT_DIR_DBG_A (./obj/gcc/so_g for gcc compilers family, if not overridden)</dd>
    <dt>stldbg-static</dt>
    <dd>Build application with (link mostly with static libraries) or static library without optimization, but with debug information and with special STL debug mode turned on (<a href="http://stlport.sourceforge.net">STLport</a>). Result will be in OUTPUT_DIR_STLDBG_A (./obj/gcc/so_stlg for gcc compilers family, if not overridden)</dd>
    <dt>install-release-shared</dt>
    <dd>Build release-shared tag; install resulting program(s) or dynamic library(s) into place INSTALL_BIN_DIR or INSTALL_LIB_DIR</dd>
    <dt>install-dbg-shared</dt>
    <dd>Build dbg-shared tag; install resulting program(s) or dynamic library(s) into place INSTALL_BIN_DIR or INSTALL_LIB_DIR_DBG</dd>
    <dt>install-stldbg-shared</dt>
    <dd>Build stldbg-shared tag; install resulting program(s) or dynamic library(s) into place INSTALL_BIN_DIR or INSTALL_LIB_DIR_STLDBG</dd>
    <dt>install-release-static</dt>
    <dd>Build release-shared tag; install resulting program(s) or static library(s) into place INSTALL_BIN_DIR or INSTALL_LIB_DIR</dd>
    <dt>install-dbg-static</dt>
    <dd>Build dbg-shared tag; install resulting program(s) or static library(s) into place INSTALL_BIN_DIR or INSTALL_LIB_DIR_DBG</dd>
    <dt>install-stldbg-static</dt>
    <dd>Build stldbg-shared tag; install resulting program(s) or static library(s) into place INSTALL_BIN_DIR or INSTALL_LIB_DIR_STLDBG</dd>
    <dt>depend</dt>
    <dd>Calculate compilation dependences (C, C++, etc.) for release, dbg, stldbg modes; note, that dependencies calculated separately from compilation process, but use the same options and same compilers as regular compilation.</dd>
    <dt>clean</dt>
    <dd>Delete object files, intermediate depenedency files that are created by building the program. However, don't delete the files that record the configuration. Also preserve dependencies file, tags files and resulting program or library.</dd>
    <dt>distclean</dt>
    <dd>Same as 'clean' plus delete resulting program(s) or libraie(s) files, dependencies file and directories that used for compilation and linking (directories should be empty at this stage). `make distclean' should leave only the files that were in the distribution.</dd>
    <dt>mostlyclean</dt>
    <dd>Like `clean', but may refrain from deleting a few files that people normally don't want to recompile.</dd>
    <dt>maintainer-clean</dt>
    <dd>Delete almost everything that can be reconstructed with this Makefile. This includes everything deleted by distclean, plus more: C source files produced by Bison, tags tables, Info files, and so on.</dd>
    <dt>uninstall</dt>
    <dd></dd>
    <dt>install-strip</dt>
    <dd></dd>
    <dt>TAGS</dt>
    <dd></dd>
    <dt>tags</dt>
    <dd></dd>
    <dt>dist</dt>
    <dd></dd>
    <dt>check</dt>
    <dd></dd>
    <dt>installcheck</dt>
    <dd></dd>
    <dt>installdirs</dt>
    <dd></dd>
    </dl>
<pre class="ddisplay">
</pre>

</div>
<!--#include file="foot.shtml" -->
<!-- Created: Mon Oct  7 16:33:17 MSD 2002 -->
  </body>
</html>

