<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<!-- Time-stamp: <06/08/30 00:05:40 ptr> -->
<!-- $Id$ -->

<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
    <link rel="stylesheet" type="text/css" href="main.css" media="screen" title="general">
    <link rel="stylesheet" type="text/css" href="decor.css" media="screen" title="general">
    <link rel="stylesheet" type="text/css" href="float.css" media="screen" title="general">
    <meta name="keywords" content="C++, STLport, portable, threads, multithreads, event, stream, IO, library, socket, ISO/IEC 14882, standard, Unix, Linux, Solaris, HP-UX, Windows">
    <title>Complement C++ libraries</title>
  </head>

  <body>
<!--#include file="head.shtml" -->
<div class="toppic">
<img src="img/jpg/login.jpg">
</div>
<div class="main">
    <p>
      Complement is a set of C++ libraries.
      This libraries provide multiplatform C++ framework
      for
    </p>
    <ul>
      <li>multithreaded programming,
      </li>
      <li>sockets programming,
      </li>
      <li>communication programming.
      </li>
    </ul>
    </p>

    <h2 class="lheader">Brief Description</h2>

    <dl>
      <dt>xmt</dt>
      <dd>
        Portable programming interface to build MultiThreaded (MT)
        applications or libraries. Hide platform-specific 
        system calls that used for MT-programming. Provide generic
        C++ interfaces for MT programming. Close to POSIX threading
        model.
      </dd>
      <dt>sockios</dt>
      <dd>
        Generic interface for interprocess communication via sockets.
        Sockios programming interface unified with C++ standard (ISO/IEC 14882)
        IO streams interface. Provide easy and evident (for C++ programmer,
        who understand STL) interface for TCP socket: framework both for client
        and server parts.
      </dd>
      <dt>StEM</dt>
      <dd>
        StEM is finite state machine, released as set of objects with
        state and interaction via events. It used as framework for
        asynchronous events delivery and processing.
        Every node has a stack of states and may react on incoming
        events (depends upon event processing handlers and state).
        Behaviour of object may vary during it's life time.
        Communication
        with events in StEM framework possible as within single process,
        as between different processes (wold-wide too), over TCP
        (framework provided by libsockios). In contrast to similar frameworks,
        to process StEM-designed code you need only C++ compiler.
      </dd>
    </dl>

    <h2 class="lheader">Present State of Complement Project</h2>

    <p>
      Active development for Unix-like systems 
      (now Linux, some time ago it was Solaris, HP-UX, Windows). 
      Supported compilers---all modern gcc (begin from 2.95.3, but better
      3.4.x or 4.x). Work well with STLport 5.x.
      Different versions and parts of this system was used on Windows
      (95, 98, NT, 2000, XP) with VC++ 5 SP3, HP-UX 11.00 (HP aCC A.03.13),
      Solaris (SunSoft CC 5.2), FreeBSD, Linux (glibc and uClibc).
    </p>
</div>

<!--#include file="foot.shtml" -->
<!-- Created: Thu Sep 12 11:00:09 MSD 2002 -->
  </body>
</html>
