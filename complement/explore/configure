#!/bin/sh

# Time-stamp: <06/06/28 12:05:08 ptr>

configmak=Makefiles/config.mak

# rm -f ${configmak}

# echo "# STLPORT_DIR := /export/home/windows/guest/STLlab/STLport" >> ${configmak}
# echo "# MSVC_DIR := c:/Program Files/Microsoft Visual Studio/VC98" >> ${configmak}
# echo "# TARGET_PROC=x86" >> ${configmak}

write_option() {
  target=`echo $1 | sed -e 's/^[^=]*=//'`
  echo $2 := $target >> ${configmak}
}

print_help() {
  cat <<EOF
Configuration utility.

Usage:

  configure [options]

Available options:

  --target=<target>     target platform (cross-compiling)
  --help                print this help message and exit
  --with-stlport=<dir>  use STLport in catalog <dir>
  --without-stlport     compile without STLport
  --with-boost=<dir>    use boost headers in catalog <dir>
  --with-system-boost   use boost from system, don't build boost
  --with-msvc=<dir>     use MS VC from this catalog
  --with-mssdk=<dir>    use MS SDK from this catalog
  --with-mwcw=<dir>     Metrowerks CodeWarrior compiler catalog (useful for mw* compilers)
                        i.e. something like "c:/Program Files/Metrowerks/CodeWarrior"
  --with-nwsdk=<dir>    use Novell NDK/SDK from this catalog (useful for *-*-netware target)
                        i.e. something like "c:/Novell/ndk/nwsdk"
  --with-extra-cxxflags=<options>
                        pass extra options to C++ compiler
  --use-static-gcc      use static gcc libs instead of shared libgcc_s (useful for gcc compiler,
                        that was builded with --enable-shared [default]; if compiler was builded
                        with --disable-shared, static libraries will be used in any case)
  --clean               remove custom settings (file ${configmak})
                        and use default values

EOF
}

case $# in
  0)
    exit 0
    ;;
esac

case $1 in
  --help)
    print_help
    exit 0
    ;;
esac

rm -f ${configmak}

while :
do
  case $# in
    0)
      break
      ;;
  esac
  option=$1
  shift
  case $option in
    --clean)
      rm -f ${configmak}
      ;; 
    --target=*)
      write_option "$option" TARGET_OS
      ;;
    --with-stlport=*)
      write_option "$option" STLPORT_DIR
      ;;
    --without-stlport)
      write_option "1" WITHOUT_STLPORT
      ;;
    --with-boost=*)
      write_option "$option" BOOST_DIR
      ;;
    --with-system-boost)
      write_option "1" USE_SYSTEM_BOOST
      ;;
    --with-msvc=*)
      write_option "$option" MSVC_DIR
      ;;
    --with-mssdk=*)
      write_option "$option" MSSDK_DIR
      ;;
    --with-extra-cxxflags=*)
      write_option "$option" EXTRA_CXXFLAGS
      ;;
    --with-nwsdk=*)
      write_option "$option" NWSDK_DIR
      ;;
    --with-mwcw=*)
      write_option "$option" MWCW_BASE
      ;;
    --use-static-gcc)
      write_option "$option" USE_STATIC_LIBGCC
      ;;
  esac
done

