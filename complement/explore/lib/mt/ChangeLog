2007-02-06  Petr Ovtchenkov  <ptr@island.corbina.net>

	* xmt.h: add Barrier; add yield;

	* libxmt: version 1.10.1

2007-02-02  Petr Ovtchenkov  <ptr@island.corbina.net>

	* xmt.h, xmt.cc: remove _state field, unuseful; add thread
	id for RIP---_id used for living thread [and show that
	thread alive], while _rip_id used in join only; this reflect
	two independent [well, almost independent] states---thread
	run/not run and thread require join/not require join.
	When I trying to made all operations with _id and _rip_id
	with MT guards, the speed of sockstreams was VERY slow,
	so I remove ones; atomics in a few places?
	Here remains one thing---what I should do, if I made few
	Threads and then fork?

	* thr_mgr.cc: sync with changes in xmt[.h.cc].

	* libxmt: version 1.10.0

2007-02-01  Petr Ovtchenkov  <ptr@island.corbina.net>

	* thr_mgr.cc: reduce amount of code; try to 'join' to already
	closed threads, wait other in loop. [this is attempt to find
	workaround for deadlock within glibc, but speedup release
	already free resources too]; add 'signal'---send signal to all
	good threads in pool; use fact, that thread's join in Thread
	destructor now.

	* xmt.cc: join in Thread destructor.

	* time.h, time.cc: timespec multiplication on double added.

	* libxmt: version 1.9.5
	
2007-01-30  Petr Ovtchenkov  <ptr@island.corbina.net>

	* shm.h: add named objects manager in shared segment
	memory allocator;

	* xmt.h, xmt.cc: unification Semaphore with Condition
	and Mutex---ipc flag passed as template parameter.

2006-12-26  Petr Ovtchenkov  <ptr@island.corbina.net>

	* shm.h, shm.cc: shared memory-based allocator

	* libxmt: version 1.9.4

2006-12-15  Petr Ovtchenkov  <ptr@island.corbina.net>

	* time.h, time.cc: add timespec in xmt namespace, useful
	for conversions and inline objects; clean some code in
	timespec operations;
	
	* xmt.h: changes related to timespec in xmt namespace and in
	global namespace; now 'delay' functions family only in xmt
	namespace and go away from Thread class;

	* xmt.h, xmt.cc: add setting signal handler with siginfo.

2006-12-14  Petr Ovtchenkov  <ptr@island.corbina.net>

	* xmt.h, xmt.cc: move 'fork' and 'become_daemon' from Thread
	class directly to namespace xmt; this may block usage
	of compilers without namespaces.

2006-12-13  Petr Ovtchenkov  <ptr@island.corbina.net>

	* thr_mgr.h, thr_mgr.cc: add join method.

2006-11-29  Petr Ovtchenkov  <ptr@island.corbina.net>

	* xmt.h, xmt.cc: added xmt::getpid() and xmt:getppid(); ::getpid()
	really return cached value, so returned pid may be parent's pid
	really. I use syscall here and rewrite appropriate var during
	Thread::fork().

	* uid.h, uid.cc: code reorganization to avoid problems with order
	of static objects dtors calls and libraries unload order.

	* libxmt: version 1.9.3

2006-11-23  Petr Ovtchenkov  <ptr@island.corbina.net>

	* uid.h, uid.cc: return hostid on Linux

	* libxmt: version 1.9.2

2006-10-31  Petr Ovtchenkov  <ptr@island.corbina.net>

	* time.cc: add useful includes, detected when compile
	without STLport.

2006-10-24  Petr Ovtchenkov  <ptr@island.corbina.net>

	* xmt.h, xmt.cc, time.h, time.cc: move timespec functions to
	time.cc; move sleep-like functions from Thread to xmt namespace
	in time.cc.

2006-10-10  Petr Ovtchenkov  <ptr@island.corbina.net>

	* thr_mgr.cc: don't kill not finished threads in ThreadMgr's
	dtor, this lead to whole process termination [I should
	investigate why].

2006-09-22  Petr Ovtchenkov  <ptr@island.corbina.net>

	* xmt.cc: no need to lock around thread creation;
	_state should be setup in goodbit in parent thread,
	not in just created [info in parent, and it should
	be joinable].

	* thr_mgr.h, thr_mgr.cc: reincarnation of threads pool;
	don't reuse allocated Thread space---Thread flags may differ
	in the future.

	* libxmt: version 1.9.1

2006-09-18  Petr Ovtchenkov  <ptr@island.corbina.net>

	* xmt.h, xmt.cc: add stack size attribute to thread creation
	in POSIX model; [if we create many threads with default stack
	size in Linux, we quick exhaust process' virtual address space;
	this has releation to nptl model].
	
	* libxmt: version 1.9.0, significant changes

2006-08-18  Petr Ovtchenkov  <ptr@island.corbina.net>

	* xmt.h, xmt.cc: use locker in the fork(), instead of body of
	atfork handlers, due to most implementations inherit mutex
	state through fork and this method more safe;
	Hmm, a few hours later I removed lock from this functions at all
	[looks like it cause to sporadic deadlock here, on fork call]

	* xmt.h, xmt.cc: allow SCOPE (process local or interprocess)
	for Condition, like for Mutex. But use it in the shared memory
	to have expected effect!

2006-08-04  Petr Ovtchenkov  <ptr@island.corbina.net>

	* xmt.h, xmt.cc: join should return either pointer or
	integer, but fit both in size; this is critical on platforms
	where sizeof(int) != sizeof(void *), for example 64-bits Linux;
	change in declaration of thread entry function.

2006-07-13  Petr Ovtchenkov  <ptr@island.corbina.net>

	* xmt.cc: fix thread suspend functional for POSIX threads.

2006-06-29  Petr Ovtchenkov  <ptr@island.corbina.net>

	* xmt.h: use template specialization for recursive-safe/unsafe
	spinlock as for Mutexes; use common template for __Locker
	for all Mutex-like locks; add typedefs for Spinlock family.

2006-06-28  Petr Ovtchenkov  <ptr@island.corbina.net>

	* xmt.cc: clean pass thread's return code---avoid
	warnings on machines with sizeof(void *) > sizeof(int),
	i.e. on ia64/amd64.

2005-12-07  Petr Ovtchenkov  <ptr@island.corbina.net>

	* config/_freebsd.h: fix _FIT defines for spinlock
	and rwlock functions on FreeBSD 5.3.

	* xmt.h, xmt.cc: throw invalid_argument exception
	if shared or recursive mutex not supported by platform;
	use namespace xmt instead of __impl.

	* thr_mgr.h, thr_mgr.cc: use namespace xmt instead
	of __impl.

	* libxmt: version 1.8.2

2005-11-29  Petr Ovtchenkov  <ptr@island.corbina.net>

	* xmt.h: add pthread_rwlock_* functionality.

	* libxmt: version 1.8.1

2005-08-19  Petr Ovtchenkov  <Petr.Ovchenkov@Kaspersky.COM>

	* xmt.h: created class LockerExt that work like Locker
	[auto-unlock in destructor] but take native mutex object.

	* libxmt: version 1.8.0

2005-06-30  Petr Ovtchenkov  <ptr@island.plnet.ru>

	* xmt.cc: Use local define to detect Netware;
	don't use set_terminate, set_unexpected on Netware

	* mwccnlm.mak: makefile for MetroWerks CodeWarrior for
	Novell Netware.

2005-03-25  Petr Ovtchenkov  <ptr@island.plnet.ru>

	* Makefile: revision of Makefiles---path to stlport lib and
	-lstlport went to common Makefiles.

2004-11-05  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* library naming scheme changed.

2004-05-06  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* xmt.cc: fix wrong calculation of difference between two
	timespecs.
	
2004-04-08  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* fl.c, flck.h: add file locking wrapper.

	* lfstream.h: filestream with file locking

2004-01-08  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* xmt.cc: apply CloseHandle call for thread handler under Windows
	[thanks Anton Kholodkov].

2003-12-30  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* xmt.cc: user words should be freed before thread termination,
	not in dtor.

2003-12-29  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* xmt.cc: avoid signaling in Thread dtor.

2003-12-05  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* xmt.cc: don't use pthread_atfork in __at_fork_child, this settings
	already inherited; this shuld be checked for Solaris.

2003-09-25  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* xmt.cc, xmt.h: add Thread state flags, intended to show
	if underlined thread is still running without restrictions
	for detached threads; method 'good' show that underlined
	thread still running, 'bad'---not running or in bad state
	and 'is_join_req' show if 'join' applicable to this thread,
	even if thread terminated and became bad; add support
	for FreeBSD 5.1; remove STLport specific macros.


2003-09-15  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* xmt.cc: fix wrong behaviour for wait_* functions of Semaphore
	class on Windows platforms [thanks Anton Kholodkov].

	* xmt.h: recurcive safe mutex and spinlock implementation revised.
	
2003-09-02  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* xmt.h: IEEE Std. 1003.1j-2000 introduce spinlock functions,
	I add wrapper classes for pthread_spin_* functions, like *mutex_*
	wrappers. This feature added for Linux only, check for other modern
	*nixes required.

2003-03-26  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* xmt.h: broadcast signaling added to Condition for non-windows
	paltforms.

	* libxmt: Version 1.6.7
	
2003-02-14  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* xmt.h, xmt.cc: nanosleep required interval, not absolute time.
	See IEEE Std 1003.1-2001 and other POSIX-like specs since 1998.

2003-02-12  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* xmt.h, xmt.cc: wrong time calculation for Semaphor with timeout.

	* libxmt: Version 1.6.6

2003-02-05  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* xmt.h, xmt.cc: add Semaphor wait with timeout.

	* libxmt: Version 1.6.5

2003-01-19  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* xmt.h: modified portable mutex templates---separate
	mutex initialization for mutex options opportunity;
	use XSI recursive mutexes feature if possible.

	* libxmt: Version 1.6.4

2003-01-17  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* xmt.h: experimental implementation of portable mutexes,
	based on template specialization technique; add mutex
	scope [aka PROCESS_PRIVATE/SYSTEM_SCOPE].

	* libxmt: Version 1.6.3
	
2003-01-15  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* xmt.cc (Repository): Add POSIX 1003.1-2001 semaphores,
	ones predecessors on Solaris, and semaphores on Wins.

	* libxmt: Version 1.6.2

2003-01-07  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* xmt.h, xmt.cc: add delay function (sleep for interval
        of time); fix wrong time conversion for Win in sleep.

2002-09-25  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* libxmt: prepare for public on sourceforge.net under
	the Academic Free License Version 1.0

2002-08-03  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* xmt.h: add std:: namespace for exception class,
	as required by gcc 3.1.1

	* libxmt: Version 1.6.1
	
2002-07-15  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* Makefile.inc, time.h, time.cc (Repository):
	time-related functions,	that has problems with
	portability and/or mt-safety will be here.

2002-07-12  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* libxmt: Version 1.6.0

2002-07-11  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* xmt.h, xmt.cc (Repository): add try_wait_time,
	thanks for Ivan Vigasin.

2002-06-23  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* xmt.cc, xmt.h (Repository): remove signal throw---seems not work
	properly; provide handler that make sanity of Thread object by signal
	TERM; modify thread-specific data pocessing with iword/pword functions;
	this still need to fix for solaris threads and Windows.

2002-06-15  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* xmt.cc (Repository): add signal handler, that exit
	from thread; some experiments with signal throw.

2002-04-17  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* thr_mgr.cc, xmt.cc: replace __PG prefix by __FIT


2001-07-27  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* libxmt: Version 1.5.1
	
	* Makefile.gcc (Repository): provide workaround for
	bug in GNU make 3.79*---it foget old value of variable when
	tag-dependent variable use += operator, if includes of makefiles
	is too deep---near deepth of 3. This influence to libraries building.
	Add explicit link with other C++ shared libraries---this significantly
	reduce library size.

2001-06-05  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* Makefile.inc (Message): library version 1.5.0
	This reflect real release major version of libxmt

2001-06-04  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* libxmt: Work with STLport 4.5 beta 8 (from stlport cvs);
	remove obsolete in any case dependence from non-STLport iostreams
	realization (it should not work).

2001-06-01  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* Parsially fixed problem: fork with POSIX threads replicate
	only calling thread. May be implement one more Thread
	manager in the xmt.cc to control threads id and argument
	passed to it, and make handlers via pthread_atfork to restart
	all ones? But this not solve problem with mutexes...

	* The fork and become_daemon now in xmt library.

	* New exception class fork_in_parent added in xmt.

	* libxmt: version 0.5.0

2001-03-20  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* Modified namespace to satisfy STLport 4.1 beta 5

	* Satisfy for STLport 4.1 beta 5.

	* Increment patch number.

2001-02-15  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* Change version

2001-01-16  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* Pass detach/daemon options to POSIX threads.

	* libxmt version incremented.

2000-12-08  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* Start usage of POSIX threads on Solaris.

	* Change STLport version

2000-12-06  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* POSIX thread support for thread_suspend: experimental
	
2000-09-29  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* libxmt:
	HP-UX: remove stack equirements, always use unbound threads.
	
2000-09-12  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* libxmt:
	ifdef #ident directive (for vary compilers)
	Removed wrong 'explicit' declaration:
	'explicit' may be used only for converting constructors.
	this-> for inherited functions (HP's aCC A.03.13 don't understand
	inheritance and 'using' clause). Created Makefiles for HP's aCC
	compiler. Workarounds for HP's aCC names resolution.

2000-08-31  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* libxmt:
	suspend/resume thread for HP
	
2000-08-10  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* libxmt:
	Port to HP-UX. Changes in posix threads---bug fixes.
	Less hostid defines --- no needs in it.
	
2000-06-08  Dmitrii Egorenkov  <degor@ParaGraph.Ru>

	* libxmt:
	Adopted for Linux (buggy---ptr)
	
2000-04-07  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt:
	STLport 4.0b5 require <string> here
	
2000-03-03  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt:
	Some call tricks during thread creation.
	
2000-02-24  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt:
	DLL export/import/none
	
2000-02-22  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt:
	std namespace changed to satisfy STLport 4.0b2
	
2000-02-18  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt:
	STLport 4.0b1 workaround
	
2000-02-10  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt:
	stlport-3.2.2-beta-4
	
2000-01-24  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt (thr_mgr.cc):
	join thread before exiting in ThrMgr destructor
	
1999-10-18  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt:
	sleep and timedwait
	
1999-09-10  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt:
	badthreadkey added.
	
1999-09-03  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt:
	Remove __DLLEXPORT definition; This work in DLL now.
	
1999-09-02  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt:
	Fix for gcc 2.95 and STLport
	
1999-05-25  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt:
	DllMain added; __thr_key moved into _sockstream.cc, where used only
	
1999-05-20  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt (thr_mgr.cc):
	Threads start as daemon | detached from ThreadMgr
	
1999-05-20  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt (thr_mgr.cc):
	Initial revision
	
1999-05-06  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt:
	Throw signal.
	
1999-04-16  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt:
	signal blocking and signal action added.
	
1999-04-07  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt:
	kill( sig ) added
	
1999-03-30  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt:
	options on thread creation added
	
1999-03-12  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt:
	Return to exit() call at thread end on Solaris/x86
	
1999-02-16  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt:
	suspend/resume added; check for good thread;
	
1999-02-09  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt:
	make dllexport for some in Thread (Win)
	
1999-02-05  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt:
	add constantness for thread main function parameter
	
1999-02-04  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt:
	For Win: TlsAlloc for soket initialization counter.
	Destruction of large parameters changed (fix dangerous code).
	
1999-02-03  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt:
	WIN32 now really work
	
1999-02-02  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libxmt:
	Start OS-idependent interface to threads
