2006-11-17  Petr Ovtchenkov  <ptr@island.corbina.net>

	* gmake/app/rules.mak, rules-install.mak, macro.mak, clean.mak:
	ability to build few programs from same Makefile; pure C linkage
	may not work properly for multiple progrmas yet.

	* gmake/targets.mak: idem

	* clean.mak, top.mak: idem

	* gmake/lib/clean.mak: idem, but main functionality for libraries
	not completed yet.

2006-11-10  Petr Ovtchenkov  <ptr@island.corbina.net>

	* gmake/app/rules.mak, gmake/app/gcc.mak: add static tags;
	this is the same as shared, except link with static libstlport.

	* gmake/CC.mak, gmake/aCC.mak, gmake/gcc.mak, gmake/mwccnlm.mak:
	allow insist on C and C++ compilers names. This may make happy
	Debian users, because of package may use names like g++-3.4 here.

	* top.mak: form ALL_TAGS depends upon options from config.mak,
	i.e. take into account static, dynamic variants and possible
	disabling dbg and stldbg variants plus build without STLport.
	Note, that configure assume WITHOUT_STLPORT by default now!
	Assume gcc compilers family, if no COMPILER_NAME set.

2006-11-03  Petr Ovtchenkov  <ptr@island.corbina.net>

	* gmake/linux/rules-so.mak, gmake/linux/rules-install-so.mak:
	generate rules with macro expansion---real metaprogramming
	within make;

	* gmake/targets.mak: generate rules with macro expansion,
	recursive file inclusion to build rules for few catalogs not
	required more.
	
	* rules-d.mak, rules-res.mak, rules-o.mak, gmake/dirsrc.mak:
	removed

	* Notes: this changes may confuse GNU make 3.79.x; I check
	this with GNU make 3.80 and 3.81---support of 3.80 has required
	few workarounds relative smooth code for 3.81.

2006-11-02  Petr Ovtchenkov  <ptr@island.corbina.net>

	* gmake/app/rules-install.mak, gmake/app/rules.mak:
	remove excessive build/install without STLport

	* gmake/lib/rules-install-a.mak: ditto

	* gmake/linux/rules-install-so.mak, gmake/linux/rules-so.mak:
	ditto

	* gmake/unix/lib.mak, top.mak: ditto

2006-11-01  Petr Ovtchenkov  <ptr@island.corbina.net>

	* gmake/subdirs.mak: reuse code to traverse catalogs

2006-10-12  Petr Ovtchenkov  <ptr@island.corbina.net>

	* gmake/targetdirs.mak: use 'so' prefix instead of 'shared';
	use '_g', '_stlg' suffixes instead of '-g' and '-stlg';
	generalize path to output and install catalogs.
	
	* gmake/linux/rules-install-so.mak: fix typo

	* gmake/lib/clean.mak: remove output directories on clean
	and install directories on distclean, but only if ones are empty

2006-10-09  Petr Ovtchenkov  <ptr@island.corbina.net>

	* gmake/linux/rules-so.mak, gmake/linux/rules-install-so.mak:
	check links content and don't modify links and installed
	library	if ones are correct.

2006-08-24  Petr Ovtchenkov  <ptr@island.corbina.net>

	* gmake/depend.mak: generate TAGS and tags by demand (with
	etags and ctags).

2006-01-18  Petr Ovtchenkov  <Petr.Ovchenkov@Kaspersky.COM>

	* gmake/app/gcc.mak, gmake/lib/gcc.mak: detect whether gcc
	was builded with --disable-shared and use correct libgcc.

	* gmake/app/rules-install.mak: use common directories creation;
	use same program name for all modes.

2005-12-16  Petr Ovtchenkov  <ptr@island.corbina.net>

	* gmake/sysid.mak: parse two-token target system identification
	string along with three-token one [useful when vendor is omitted]

	* app/gcc.mak, lib/gcc.mak: use build with -nostdlib on Solaris.

	* gmake/lib/rules-a.mak: remove archive before add files; this allow
	to avoid unexpected append of files to the end of existent archive.

2005-08-04  Petr Ovtchenkov  <ptr@island.plnet.ru>

	* rules-d.mak: add .cxx as C++ sources.

2005-06-30  Petr Ovtchenkov  <ptr@island.plnet.ru>

	* gmake/mwccnlm.mak, gmake/app/mwccnlm.mak, gmake/lib/mwccnlm.mak:
	mwccnlm [CodeWarrior for Netware] support

	* gmake/sysid.mak: mwccnlm is really cross-compiler

2005-05-11  Petr Ovtchenkov  <ptr@island.plnet.ru>

	* rules-o.mak, gmake/targets.mak: add .cxx as C++ sources.

	* gmake/gcc.mak: always add path to STLport include, if not requested
	WITHOUT_STLPORT.

	* gmake/app/rules.mak: add EXTRA_POST [_DBG,_STLDBG] and
	EXTRA_PRE [_DBG,_STLDBG] macro as targets to do before make output
	dirs and compile, and after linkage. Useful for pre- and post- build
	additional processing.

2005-04-18  Petr Ovtchenkov  <ptr@island.plnet.ru>

	* rules-o.mak: distinguish .s and .S sources.

2005-04-15  Petr Ovtchenkov  <ptr@island.plnet.ru>

	* rules-o.mak, gmake/gcc.mak, gmake/targets.mak: add asm sources,
	including cross.

	* gmake/linux/sys.mak: use cross-ar in case of cross

	* gmake/linux/rules-so.mak: use C linker if no C++ sources

2005-04-11  Petr Ovtchenkov  <ptr@island.plnet.ru>

	* gmake/targets.mak, gmake/app/rules.mak: use C as linker, if no any C++ files

2005-03-29  Petr Ovtchenkov  <ptr@island.plnet.ru>

	* gmake/app/rules.mak, gmake/freebsd/rules-so.mak, gmake/linux/rules-so.mak,
	gmake/openbsd/rules-so.mak, gmake/sunos/rules-so.mak: fix link sequence---
	the end objects should be really last, i.e. after libs. This affected
	by linkage with libstlport without libstdc++.

2005-03-25  Petr Ovtchenkov  <ptr@island.plnet.ru>

	* gmake/app/gcc.mak, gmake/lib/gcc.mak:
	code reorganization to simplify platform configuration with or without
	-nostdlib [avoid link with libstdc++ or libestdc++]; now link without
	libstdc++/libestdc++ supported on Linux and OpenBSD. libstlport
	will be in link sequence when _USE_NOSTDLIB in charge. If macro
	NOT_USE_NOSTDLIB defined original gcc linkage in use and no link with
	libstlport. Don't insert libsupc++ into libxxx.so and in end application---
	this archive is in libstlport now. Ability to link without stlport; path
	to stlport lib and -lstlport added.

	* build/Makefiles/gmake/openbsd/rules-so.mak: idem.

	* build/Makefiles/gmake/freebsd/rules-so.mak: idem.

2005-03-23  Petr Ovtchenkov  <ptr@island.plnet.ru>

	* gmake/app/gcc.mak, gmake/lib/gcc.mak: don't use libsupc++,
	it linked in libstlport.so now; add libstlport into 'standard' libs;
	add macro to turn off STLport usage
