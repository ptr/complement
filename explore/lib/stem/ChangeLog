2010-05-25  Petr Ovtchenkov  <ptr@void-ptr.info>

	* Event.h: Event_base specialization
	for pair<> as data;
	
	* libstem: revision 5.4.6.

2010-05-21  Petr Ovtchenkov  <ptr@void-ptr.info>

	* _EventHandler.cc, EvManager: clean fork
	processing; stop/start EvManager's queue;
	
	* libstem: revision 5.4.5.

	* EvManager.cc: fix 'erase in unordered
	container' bug;

	* libstem: revision 5.4.4.

2010-05-19  Petr Ovtchenkov  <ptr@void-ptr.info>

	* EventHandler: get_default return address
	of 'default' StEM object [nay be used during
	communication with another process];
	
	* libstem: revision 5.4.3.

2010-05-13  Petr Ovtchenkov  <ptr@void-ptr.info>

	* EvManager.cc: remove address line from heap,
	if unsubscribed object had few addresses;

	* libstem: revision 5.4.2.

2010-04-20  Petr Ovtchenkov  <ptr@void-ptr.info>

	* NetTransport: timeout for 'discovery'
	process in NetTransportMgr;

	* libstem: revision 5.4.1.

2010-03-10  Petr Ovtchenkov  <ptr@void-ptr.info>

	* EventHandler, EvManager, NetTransport:
	EventHandler's may mark itself as 'remote'
	or 'nosend'; for such objects events
	dispatching will be done on stack
	[no recursion via Send()]; this give better
	performance in important cases;

	* EvManager: lock heap via rw_mutex,
	performance improved;

	* libstem: revision 5.4.0.

2010-02-18  Petr Ovtchenkov  <ptr@void-ptr.info>

	* EventHandler.h, _EventHandler.cc: add
	const qualifier for Send and Forward methods;

	* libstem: revision 5.3.9.

2010-02-08  Petr Ovtchenkov  <ptr@void-ptr.info>

	* NetTransport.cc: do _close in
	NetTransportMgr::_loop after close network
	to force StEM remove addresses, associated
	with NetTransportMgr before dtor call;

	* libstem: revision 5.3.8.

2010-01-27  Petr Ovtchenkov  <ptr@void-ptr.info>

	* EventHandler, EvManager: synchronous call
	implemented; check object state, search
	appropriate handler as in normal Send, but
	done on the stack of caller and synchronous;

	* libstem: revision 5.3.7.

2010-01-18  Petr Ovtchenkov  <ptr@void-ptr.info>

	* Cron.cc: fix race with loop run marker;

	* libstem: revision 5.3.6.

2009-10-22  Petr Ovtchenkov  <ptr@void-ptr.info>

	* EvManager.cc: object may hasn't any StEM
	address [in process of Unsubscribe for example],
	so address queue may be empty; EvManager should
	take it into account;

	* libstem: revision 5.3.5.

2009-10-08  Petr Ovtchenkov  <ptr@void-ptr.info>

	* NetTransport.cc, NetTransport.h: annotation
	of object's address on any side of [network]
	channel; address linked to NetTransport_base,
	so object may be accessed via this channel;
	
	* libstem: revision 5.3.4.

2009-09-18  Petr Ovtchenkov  <ptr@void-ptr.info>

	* EvPack.cc: if string size unpack fail,
	don't try to unpack string's data [bug];

	* libstem: revision 5.3.3.

2009-08-21  Petr Ovtchenkov  <ptr@void-ptr.info>

	* Cron.h, Cron.cc: change of expiration
	time was ignored, when top waiting message
	replaced by another message;

	* libstem: revision 5.3.1.

	* Cron.h, Cron.cc: CronEntry carry Event,
	instead of code, address, string; this allow
	to use convertable events in Cron.
	
	* libstem: revision 5.3.2.

2009-08-17  Petr Ovtchenkov  <ptr@void-ptr.info>

	* EvManager.cc, EvManager.h: parallel events
	dispatching without violation of sequence order;

	* libstem: revision 5.3.0.

2009-08-13  Petr Ovtchenkov  <ptr@void-ptr.info>

	* Cron.h, Cron.cc, EDSEv.h: unuseful and dangerous
	functionality removed;

	* libstem: revision 5.2.3.

2009-07-03  Petr Ovtchenkov  <ptr@void-ptr.info>

	* NetTransport.h, NetTransport.cc: forgot tcp_no_delay
	in NetTransportMgr::open;

	* NetTransport.h, NetTransport.cc: don't try to set
	tcp_no_delay for non-tcp connections;

	* NetTransport.h, NetTransport.cc: support
	connection-oriented UNIX sockets as StEM transport;

	* libstem: revision 5.2.2.

2009-06-27  Petr Ovtchenkov  <ptr@void-ptr.info>

	* EventHandler, EvManager: do explicit subscription
	of EventHandlers in StEM---no registration of EventHandler
	in EvManager in ctor; use either stem_scope guard,
	or obj.enable()/obj.disable() pair;

	* EvManager.cc, EventHandler.h: fix object destruction
	when it used in EvManager;

	* EventHandler.h: make EventHandler non-copieable,
	non-assignable;

	* NetTransport.h, NetTransport.cc: remove obsolete fields
	in message header; this break StEM network protocol
	compatibility with older revisions;
	
	* libstem: revision 5.2.0.

2009-06-24  Petr Ovtchenkov  <ptr@void-ptr.info>

	* NetTransport.h, NetTransport.cc: clean code for
	extracting event from net channel and pushing event
	to net channel;

	* libstem: revision 5.1.3.

2009-06-10  Petr Ovtchenkov  <ptr@void-ptr.info>

	* NetTransport.cc: first close connection, then do
	'solitary' (see 2009-06-05) in NetTransport_base::_close
	to avoid access after destroy;

	* libstem: revision 5.1.2.

2009-06-08  Petr Ovtchenkov  <ptr@void-ptr.info>

	* Cron.h, Cron.cc: fix condition check in cron
	loop---avoid extra load;

	* libstem: revision 5.1.1.

2009-06-05  Petr Ovtchenkov  <ptr@void-ptr.info>

	* EventHandler.h, _EventHandler.cc: worry about
	empty states container; clean states container
	and remove all own StEM addresses in dtor;
	add public 'solitary' method to remove object
	from StEM communication at all---workaround
	for case when event processing may collide with
	object's dtor;

	* libstem: revision 5.1.0.

2009-06-02  Petr Ovtchenkov  <ptr@void-ptr.info>

	* EvManager.cc, NetTransport.cc: erase id from
	addresses list of NetworkTransport_base, when
	address unsibscribed; EvManager check that
	unsubscribed address correspond to object, even
	in case of single record and report about problem;

	* EvManager.h, EvManager.cc: add tracesubscr flag
	to trace StEM's subscription/unsubscription;

	* libstem: revision 5.0.3.

2009-06-01  Petr Ovtchenkov  <ptr@void-ptr.info>

	* NetTransport.h, EvManager.cc: C++ names resolution
	during tracing;

	* libstem: revision 5.0.2.

2009-05-29  Petr Ovtchenkov  <ptr@void-ptr.info>

	* Repository: change information and formatting flags
	when trace StEM events.

	* libstem: revision 5.0.1.

2009-05-05  Petr Ovtchenkov  <ptr@void-ptr.info>

	* Repository: StEM objects addressing scheme changed;
	StEM object (EventHandler) has unique (globally) address
	[xmt::uuid_type]; concept of 'internal/external' addresses
	removed; tables for 'external' addresses removed; 'external'
	bit removed; conversions processed as for foreign delivery
	in any case; __[un]pack methods removed, __net_[un]pack
	renamed to __[un]pack; reverse mapping (EventHandler* -> address)
	removed; special mapping to transport (address -> transport)
	removed; EventHandler may has few addresses; addresses of objects
	in another process assigned to appropriate NetTransport_base
	(net transport channel representation); empty description
	not present in NS table more; NS represent as 
	{description -> {address}} (changed);

	* Repository: EventHandler may assign his address as 'default' with
	obj.set_default(); if no default object assigned on peer side,
	NetTransportMgr::open return nil_uuid; peer's address of ns mapped
	to Net* channel within 'discovery/first connect' procedure;

	* Repository: NetTransport* assign address of StEM object to self
	from received event source, if this address unknown on this side;

	* libstem: revision 5.0.0.

2009-03-30  Petr Ovtchenkov  <ptr@void-ptr.info>

	* Event.h: pack/unpack Event_base<xmt::uuid>, i.e. may
	be used in StEM transport;

	* libstem: library version 4.10.3.

2009-03-23  Petr Ovtchenkov  <ptr@void-ptr.info>

	* EvPack.cc, EvPack.h: converters to/from xmt::uuid_type
	added; direct read from istream into string in __pack_base;

	* libstem: library version 4.10.2.

2009-03-16  Petr Ovtchenkov  <ptr@void-ptr.info>

	* NetTransport.cc: Direct read from socket into string.

2009-02-09  Petr Ovtchenkov  <ptr@void-ptr.info>

	* NetTransport.cc: set socket option so_tcp_nodelay,
	i.e. disable Nagle algorithm for any StEM net connection;

	* libstem: library version 4.10.1.

2009-01-21  Petr Ovtchenkov  <ptr@void-ptr.info>

	* EventHandler.h, _EventHandler.cc: reduce amount of
	entities in convertion events within dispatchers;

	* EventHandler.h, Event.h: add converters for marginal,
	but very important cases; it is possible to write
	handlers that accept EventVoid and std::string, see
	ut/Convert.cc;

	* libstem: library version 4.10.0.

2008-12-26  Petr Ovtchenkov  <ptr@void-ptr.info>

	* Cron.h, Cron.cc: replace int32 by string in argument
	of Cron events;

	* libstem: library version 4.9.3.

2008-12-12  Petr Ovtchenkov  <ptr@void-ptr.info>

	* EvManager.cc: NetTransport_base's push should be
	under locks; otherwise removing object possible
	while we still within push;

	* unit_test.cc: possible test for problem above;

	* libstem: library version 4.9.2.

2008-12-05  Petr Ovtchenkov  <ptr@void-ptr.info>

	* Cron.h, Cron.cc: fix cron loop and wake-up;

	* libstem: library version 4.9.1.
	
	* NetTransport.cc, NetTransport.h: review and clean
	NetTransport* design; reopen of NetTransportMgr
	not permitted now, like sockstream; NetTransportMgr open
	methods was made similar to sockstream;

	* libstem: library version 4.9.0.

2008-12-03  Petr Ovtchenkov  <ptr@void-ptr.info>

	* Cron.cc: fix wake-up condition;

	* libstem: library version 4.8.6.

2008-12-01  Petr Ovtchenkov  <ptr@void-ptr.info>

	* Cron.h, Cron.cc: fix deadlock in stopping Cron's loop;
	use predicate for check end-of-loop condition;

	* ut: unit test for basic Cron usage;
	
	* libstem: library version 4.8.5.

2008-11-27  Petr Ovtchenkov  <yeti@yandex-team.ru>

	* EvManager.h, EvManager.cc: move push from inline
	to library; add tracing of push event into queue
	by tracedispatch flag; add tracing of exit from Dispatch
	loop, queues swap;

	* NetTransport.cc: add tracing on tracenet flag
	for close transport, exit from events loop in
	NetTransportMgr and in case of exceptions;
	
	* libstem: library version 4.8.4.

2008-10-16  Petr Ovtchenkov  <ptr@void-ptr.info>

	* EvManager.cc: try to process the rest of income queue
	after finish marker turned on, if it not empty.

	* libstem: library version 4.8.3.

2008-07-08  Petr Ovtchenkov  <yeti@yandex-team.ru>

	* _EventHandler.cc: return state via local variable;

	* libstem: library version 4.8.2.

2008-07-07  Petr Ovtchenkov  <yeti@yandex-team.ru>

	* EvManager.h, EvManager.cc: fix dispatch loop finish
	condition;

	* libstem: library version 4.8.1.

2008-06-27  Petr Ovtchenkov  <ptr@island.corbina.net>

	* Cron.h, EvManager.h, EventHandler.h, NetTransport.h:
	use wg21 draft for threads, based on mt/thread,
	mt/mutex and mt/condition_variable (see libxmt);

	* Cron.cc, EvManager.cc, NetTransport.cc, _EventHandler.cc:
	ditto;

	* ut/unit_test.cc: ditto; use libsockios 2.0.0;
	
	* libstem: library version 4.8.0

2007-10-24  Petr Ovtchenkov  <ptr@island.corbina.net>

	* Event.h: initialize pid by unsigned;

	* Event.h: __gnu_cxx::hash<void*> for gcc 3.3.6;

	* libstem: library version 4.7.1

2007-10-16  Petr Ovtchenkov  <ptr@island.corbina.net>

	* Event.h, EvManager.h: use hash instead of map, this save
	~10 bytes per stem object;

	* Event.h, EvPack.cc: in gaddr_type structure use 32-bit
	integer for pid,  most systems has max(pid) < 2^15, 64-bit
	Linuxes max(pid) < 4*1024*1024, but some other unixes may
	has larger numbers... check it; this save ~24 bytes per
	stem object;

	* libstem: library version 4.7.0

2007-10-09  Petr Ovtchenkov  <ptr@island.corbina.net>

	* EventHandler.h: preserve and restore format flags during
	trace;

	* libstem: library version 4.6.5.

2007-10-01  Petr Ovtchenkov  <ptr@island.corbina.net>

	* NetTransport.h, NetTransport.cc: comment NetTransportMP,
	looks it useless; add trace for NetTransport [server part];

	* NetTransport.cc: add more trace to NetTransport_base;

	* NetTransport.cc: bogus libstdc++ use std::IosFlags for
	ios_base::flags( flags );

	* libstem: library version 4.6.4

2007-09-05  Petr Ovtchenkov  <ptr@island.corbina.net>

	* Cron.h, NetTransport.h, EvManager.h: looks like non-POD return
	from thread is unstable, and should be avoided; replace union
	rec_code by void * or long, depends upon operation environment;

	* Cron.cc, NetTransport.cc, EvManager.cc, ut/unit_test.cc: idem.

2007-08-25  Petr Ovtchenkov  <ptr@island.corbina.net>

	* EvManager.h, NetTransport.cc: use ostream and trace flags
	from EvManager for error reports instead of cerr;

	* libstem: library version 4.6.3

2007-08-23  Petr Ovtchenkov  <ptr@island.corbina.net>

	* NetTransport.h: inhibit copy of NetTransportMgr explicitly;

	* libstem: library version 4.6.2 (due to address for janus).

2007-08-17  Petr Ovtchenkov  <ptr@island.corbina.net>

	* Event.h, EvManager.cc: add fixed address for janus
	[virtual synchrony dispatcher, janus subproject].

2007-08-03  Petr Ovtchenkov  <ptr@island.corbina.net>

	* Makefile: let's try don't include boost's -I if macro
	not defined---mysterious behaviour otherwise happens;

	* Event.h, EvManager.cc, EvPack.cc: use TR1 type_traits technique;
	add tricks to compile without STLport;

	* EventHandler.h: remove STLport's macro;

	* ../../test/stem: moved to ut.

2007-07-27  Petr Ovtchenkov  <ptr@island.corbina.net>

	* Event.h, EvManager.cc, EvPack.cc: operator of format output
	of gaddr_type is public now and situated in the EvPack.cc,
	declared in the Event.h in namespace std.

	* libstem: library version 4.6.1

2007-07-18  Petr Ovtchenkov  <ptr@island.corbina.net>

	* test/stem: boost unit test framework replaced by exam.

2007-07-12  Petr Ovtchenkov  <ptr@island.corbina.net>

	* libstem: library version 4.6.0

2007-07-11  Petr Ovtchenkov  <ptr@island.corbina.net>

	* EvManager.h, Cron.h: Condition replaced by condition.

2007-06-29  Petr Ovtchenkov  <ptr@island.corbina.net>

	* NetTransport.cc, EvManager.cc: replace Locker by scoped_lock.

	* EvManager.cc, _EventHandler.cc, EventHandler.h, EvManager.h, Cron.h:
	all Mutex replaced by mutex

	* EventHandler.h, _EventHandler.cc: mutexRS renamed to recursive_mutex;
	LockerRS renamed to recursive_scoped_lock; obsolete LockerSDS
	replaced by recursive_scoped_lock;

	* _EventHandler.cc: call destructor, don't free memory here;
	acquire lock (missed lock).

2007-03-12  Petr Ovtchenkov  <ptr@island.corbina.net>

	* EvManager.h, EvManager.cc: trace-related locks, flags and
	functions moved from static to member; fix bogus bug---missed
	return in << operator for gaddr_type;

	* NetTransport.cc: directly use _trflags, due to function use
	lock now;

	* _EventHandler.cc: ::getpid call may give lame result after
	fork; use xmt::getpid;

	* libstem: library version 4.5.0

2007-02-08  Petr Ovtchenkov  <ptr@island.corbina.net>

	* EvManager.h, EvManager.cc: use deque instead of queue;
	this allow to use container's swap, not exchange via temporary
	objects [via copy];

	* EventHandler.h, _EventHandler.cc: destroy and create
	EvManager in child process after fork, if there are was
	EvManager;

	* libstem: library version 4.4.0

2006-12-13  Petr Ovtchenkov  <ptr@island.corbina.net>

	* NetTransport.h, NetTransport.cc: NetTransportMgr
	should have own sockstream and avoid problems with
	order of destruction of net member.

2006-12-04  Petr Ovtchenkov  <ptr@island.corbina.net>

	* EvManager.h, EvManager.cc, Names.cc: remove global
	address to internal address heap; use global address
	to transport instead [with a bit comlpicated target
	structure---local id added]; this resolve problems
	with mapping external objects to local address when
	few channels to remote system present.

2006-11-30  Petr Ovtchenkov  <ptr@island.corbina.net>

	* Event.h: code clean; change specialization of Event_base
	to avoid wrong code or bogus workarounds if whole class
	specialization happens;

	* EventSpec.h: removed, due to reasons above;

	* Event.h, EventHandler.h: add _flags member to event, in
	particular to detect errors during conversions and network
	conversions;

	* NetTransport.cc: pass _flags; taken unused field for this;

	* _SessionMgr.cc, _EvSession.cc: removed;

	* SessionMgr.h, EvSession.h: ditto.

	* EventHandler.h: add classname() function, allow find
	real name of class in the _Dispatch [well, the name
	of last class with DECLARE_RESPONSE_TABLE]; very useful
	for debug;

	* EvManager.h, EvManager.cc: add possibility to trace
	events in EvManager;

	* Makefile.inc: library version 4.3.0

2006-11-29  Petr Ovtchenkov  <ptr@island.corbina.net>

	* EvManager.h, EvManager.cc, NetTransport.h, NetTransport.cc:
	global addressing/naming scheme [communication with external
	objects] now in working state.

	* Names.cc: ditto; return not only external addresses, but
	internal too.

2006-11-24  Petr Ovtchenkov  <ptr@island.corbina.net>

	* Event.h, EvPack.h, EvPack.cc: introduce 'global
	address'---unique object address as composition
	of hostid, pid adn local address;

	* NetTransport.h, NetTransport.cc, EvManager.h, EvManager.cc:
	rewritten scheme of mapping between internal and external
	addresses and message routing logic.
	
	* Names.cc, Names.h, EDSEv.h: return gloabal addresses
	list, addresses not associated with communication channel;
	remove obsolete NS requests/responses;

	* _EventHandler.cc, EventHandler.h: object can return
	own global id.
	
	* Makefile.inc: _EvSession.cc and _SessionMgr.cc removed
	from compilation; library version 4.2.0

2006-10-12  Petr Ovtchenkov  <ptr@island.corbina.net>

	* NetTransport.h, NetTransport.cc: remove make_map,
	it useless and even dangerous in practice.

	* EvManager.h, EventHandler.h, _EventHandler.cc:
	allow change announce of object's info; return
	string object instead of const reference from
	annotate by safety reasons.

2006-10-10  Petr Ovtchenkov  <ptr@island.corbina.net>

	* NetTransport.h, EventHandler.h, EvManager.h: remove
	SessionMgr---it not used anyway. This functionality
	should be reimplemented in different manner.

	* _EventHandler.cc, NetTransport.cc, EvManager.cc: ditto.

2006-10-06  Petr Ovtchenkov  <ptr@island.corbina.net>

	* NetTransport.h, NetTransport.cc: move make_map
	from NetTransportMgr to NetTransport_base, it
	useful for any net transport.

2006-10-04  Petr Ovtchenkov  <ptr@island.corbina.net>

	* EvPack.cc: erase target string in any case---length of string
	may be indeed 0.

	* Names.h, Names.cc: add one-message report about ns records

	* EDSEv.h: provide defines for one-message report about ns records

2006-10-03  Petr Ovtchenkov  <ptr@island.corbina.net>

	* Names.h, Names.cc: localize heap locking---no wait in
	the Send call [use temporary container instead]; get_by_name
	return sequence of name entries too, as get_list, not single record.

2006-09-30  Petr Ovtchenkov  <ptr@island.corbina.net>

	* _EventHandler.cc: fix wrong decrement and deinitialization
	of EvManager.

	* EventManager.cc: directly use loop thread wake up condition
	[fix problem with thread-safe signaling about loop termination].

2006-08-21  Petr Ovtchenkov  <ptr@island.corbina.net>

	* NetTransport.cc: close() should shutdown connection
	in NetTransportMgr, like in dtor.

	* NetTransport.cc: remove linger and keepalive socket
	options, it not useful, but may lead to rpblems

2006-08-04  Petr Ovtchenkov  <ptr@island.corbina.net>

	* Cron.h, EvManager.h, NetTransport.h: changes in 
	thread entry function.
	
	* Cron.cc, EvManager.cc, NetTransport.cc: ditto.

2006-07-20  Petr Ovtchenkov  <ptr@island.corbina.net>

	* crc.h: use platform-independent uint32_t for CRC types.

	* NetTransport.cc: use platform-independent uint32_t for
	network communication.

	* Cron.h, EvSession.h, Event.h: ditto

	* EvPack.cc: ditto

2006-07-19  Petr Ovtchenkov  <ptr@island.corbina.net>

	* Event.h: libstdc++ v3, timestamp 20050519 (gcc 3.4.4)
	has __type_traits, while libstdc++ v3, timestamp 20050921
	(gcc 4.0.2) not; I use boost's staff instead.

2006-07-13  Petr Ovtchenkov  <ptr@island.corbina.net>

	* EvManager.cc: add guard for dispatch loop stop flag.

	* EvManager.h: idem

	* NetTransport.cc: socket manager already provide connection
	loop; socket in NetTransport should be shutdown to break down
	through infinite read.

	* NetTransport.h: prepare NetTransport to current sockmgr.

	* _EventHandler.cc: add guard for Init, where EvManager and Names
	started.

	* libstem (Repository): library version 4.1.0.

2006-06-28  Petr Ovtchenkov  <ptr@island.corbina.net>

	* Makefile: remove -ISTLPORT, may be build without one; but
	boost is required in this case.

	* Cron.cc: check LONG_LONG in libstdc++ too

	* Event.h: define __type_traits (from STLport) in case of
	build with libstdc++.

	* EventHandler.h: use ext/functional and namespace __gnu_cxx
	for some functors when compile with libstdc++.

	* SessionMgr.h: ditto

2006-05-24  Petr Ovtchenkov  <ptr@island.corbina.net>

	* EventHandler.h: explicitly add stdexcept header.

2006-02-27  Petr Ovtchenkov  <ptr@island.corbina.net>

	* EvManager.cc, NetTransport.cc, _EventHandler.cc: rename nsaddr to
	ns_addr to fix conflict with define in resolv.h for backword
	compatibility.

	* Event.h: ditto.

	* libstem (Repository): library version 4.0.1.

2005-06-28  Petr Ovtchenkov  <Petr.Ovchenkov@Kaspersky.COM>

	* EvPack.h: add missed short and unsigned short to transport.

2005-06-14  Petr Ovtchenkov  <Petr.Ovchenkov@Kaspersky.COM>

	* EventHandler.h: modern compilers support member templates,
	so member template methods Send and Forward added for
	parametric Event.

2005-03-30  Petr Ovtchenkov  <ptr@island.plnet.ru>

	* libstem (Repository): fix problems with modern compiler
	[gcc 3.4.2, more strict and near Standard]; reincarnation
	in CVS repository under version 4.0.

2003-11-06  Petr Ovtchenkov  <ptr@Island.Br.UrbanNet.Ru>

	* libEDS: library renamed to 'stem' == lower of 'StEM'

	* libstem: compilation with present libxmt and libsockios

2001-07-27  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* libEDS: Version 3.5.2
	
	* Makefile.gcc (Repository): provide workaround for
	bug in GNU make 3.79*---it foget old value of variable when
	tag-dependent variable use += operator, if includes of makefiles
	is too deep---near deepth of 3. This influence to libraries building.
	Add explicit link with other C++ shared libraries---this significantly
	reduce library size.

2001-06-13  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* NetTransport.cc (Repository): The limit of EDS message is increased
	from 1M to 4M;
	* libEDS: new patch number, library version 3.5.1 now.

2001-06-05  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* Makefile.inc (Message): library version 3.5.0
	This reflect real major libEDS release.

2001-06-04  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* libEDS: Work with STLport 4.5 beta 8 (from stlport cvs);
	remove obsolete in any case dependence from non-STLport iostreams
	realization (it should not work).

2001-06-01  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* The fork and become_daemon now in xmt library.

	* New exception class fork_in_parent added in xmt.

	* libEDS: version 0.5.0
	
2001-03-20  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* Modified namespace to satisfy STLport 4.1 beta 5

	* EvSession.h:
	problems with non-inline copy constructor and operator (VC5 sp3)

	* Satisfy for STLport 4.1 beta 5.

	* Increment patch number.

2001-03-01  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* sockios:
	setoptions for socket moved from basic_sockbuf to sockstream.

	* Incremented patch number (in version presentation) after sockstream
	modifications.

2001-02-15  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* Change version

2001-02-06  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* Under hard load I see the same behavior as under HP-UX and Linux.
	Fix code: remove difference in code between Solaris and non-Solaris
	for MCSF polisy of socket manager.

	* EvSession.h, _EvSession.cc:
	Added copy constructor and assignment operator. All MT-unsafe
	operations are protected now. Public accesable operations return
	copy of object, not reference.

	* EventHandler.h:
	Destructor marked as virtual.

	* NetTransport.h, NetTransport.cc:
	Unsafe operations with sessions are protected now. Public accessable
	operations return copy of SessionInfo instead of reference.

2001-01-30  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* Cron:
	Remove event from Cron service with consideration of arg number.

	* NetTransport:
	We should not erase session when control object exist, but should
	do this when no such object.

2001-01-22  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* Approach for fix problem with lost info about closed connections
	on non-Solaris OSes. Should be checked on other OS, including Solaris
	and non-MP variant.

	* Cron: I should use RemoveState(), not PopState()

2001-01-16  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* Cron (Cron.h, Cron.cc, NetTransport.cc):
	only one Cron loop thread per instance start now, it go	to suspended
	state if no messages in queue instead of exit.

	* NetTransportMgs (NetTransport.h):
	before open we sure that _loop terminated.

	* Increment libEDS version.

2000-12-29  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* Cron (Cron.h, EvPack.h, Cron.cc):
	Start of cron events: added nanoseconds;
	Cron entry has now unsigned argument, and notification send
	this argument.

	* NetTransport (NetTransport.h, NetTransport.cc):
	Fix problem for NetTransportMgr: when close communication socket I
	join thread with read (pop) loop.

2000-12-08  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* Change STLport version
	
2000-12-06  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* Cron: Remove waiting: no sense.

2000-12-05  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* Cron: Add wait to Cron---no join_all for POSIX threads.

2001-11-21  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* Cron.cc: Accept zero period if event planning to send only once.

2000-11-04  Petr Ovtchenkov  <ptr@ParallelGraphics.COM>

	* sockios:
	Multiplexsor variant of Sock manager---data from net, that was
	readed from net and buffered in sockbuf, not extracted befor next
	data recieved (I wait on poll). Now I check is available data
	in buffer and return this sockstream if yes before calling poll.
	
2000-09-12  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libEDS:
	ifdef #ident directive (for vary compilers)
	Removed wrong 'explicit' declaration:
  	'explicit' may be used only for converting constructors.
	this-> for inherited functions (HP's aCC A.03.13 don't understand
	inheritance and 'using' clause). Created Makefiles for HP's aCC
	compiler. Workarounds for HP's aCC names resolution.
	This is release that start working on HP-UX 11.00 (with aCC A.03.13).

2000-08-10  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libEDS:
	Port to HP-UX. Changes in posix threads---bug fixes.
	Less hostid defines --- no needs in it.

2000-05-31  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libEDS:
	Cron bug fixed; Less cerr printing
	
2000-05-23  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libEDS:
	GNU C++: required abbreviations for Sun
	
2000-02-24  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libEDS:
	DLL export/import/none
	
2000-01-05  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libEDS:
	Asynchronous internal events processing
	
1999-11-09  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libEDS:
	Event::key_type obsolete
	
1999-10-20  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libEDS:
	MT problem during access to state history stack.
	
1999-09-13  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libEDS:
	Allow forward event from one object to another.
	
1999-09-10  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libEDS:
	NameService established. Fix message addressing bug for internal
	messages transport.
	
1999-06-04  Petr Ovtchenkov  <ptr@ParaGraph.Ru>

	* libEDS:
	Removed dependency from static constructors run order for events
	tables. Removed unneeded calls and methods.

1999-03-19  Petr Ovtchenkov

	* libEDS:
	Reincarnation of EDS. EDS 3 Now! Support net and local events
	traffic; Total rewritten addressing scheme.

1998-05-21  Petr Ovtchenkov

	* The road to EDS 3: Start revision of OXW
	
1996-11-25  Petr Ovtchenkov  

	* libOXW:
	Names changed in EDS (EDSEvent, EDSEventT, EDSCallbackObject,
	EDSEventsCore, etc.) in spirit of separate libraries.

1996-11-03  Petr Ovtchenkov  

	* libOXW:
	The events transfer has made as const event transfer. This has done
	to avoid implicit events modification during transport ones.
	Such modifications dangerous and depend upon events dispatcher
	realization.

1996-10-07  Petr Ovtchenkov  

	* libOXW:
	Variant without X. Some names changed.
	
1996-03-06  Petr Ovtchenkov  

	* libOXW:
	Fixed bug with wrong find of states: now states push_front in
	theHistory.
	
1996-03-05  Petr Ovtchenkov  

	* libOXW:
	DispatchStub added (find, but not call).
	
1996-02-29  Petr Ovtchenkov  

	* libOXW:
	Radical revision of events---states container.
	
1995-12-28  Petr Ovtchenkov  

	* libOXW:
	Modification in search of appropriate state in states stack.
	
1995-11-21  Petr Ovtchenkov  

	* libOXW:
	Tracing of events, and more pretty release.
	
1995-11-11  Petr Ovtchenkov  

	* libOXW:
	stack of object's states
	
1995-11-02  Petr Ovtchenkov  

	* libOXW (Revision 2 start)

1995-10-01  Petr Ovtchenkov  

	* Events dispatcher can find both virtual and non-virtual catchers.

1995-04-26  Petr Ovtchenkov  

	* Initial revision (?) libAS
